from matplotlib.ticker import (MultipleLocator, FormatStrFormatter,
                               AutoMinorLocator)
matplotlib.rcParams.update({'font.size': 25})
plt.rc('text', usetex=True)
plt.rc('font', family='Open Sans')
matplotlib.rcParams['text.latex.preamble'] = [
    r'\usepackage{amsmath}',
    r'\usepackage{amssymb}',r"\usepackage{nicefrac}"]


exec(open("/home/max/Analysis_Tools/colorsetc.py").read())


ax.yaxis.set_label_coords(-0.05,0.5)

ax.tick_params(left=True,right=True,bottom=True,top=True,which='major',length=10)
ax.tick_params(right=True, direction='in',which='both')    ax.tick_params(left=True,right=True,bottom=True,top=True,which='minor',length=5)

plt.xlabel(r"$c$",fontsize=25)
plt.ylabel(r"$R_g^2$",rotation=0,fontsize=fontsize)
plt.legend(prop={'size': fontsize})



ms=15

major_locator_x = MultipleLocator(3)
major_locator_y = MultipleLocator(100)

minor_locator_x = AutoMinorLocator(3)
minor_locator_y = AutoMinorLocator(4)
ax.xaxis.set_minor_locator(minor_locator_x)
ax.yaxis.set_minor_locator(minor_locator_y)
ax.xaxis.set_major_locator(major_locator_x)
ax.yaxis.set_major_locator(major_locator_y)

plt.yticks(plt.yticks()[0][::2]) # jeden zweiten Tick l√∂schen


for i in np.arange(len(sys.argv)):
    if sys.argv[i] == "png":
        plt.savefig("../../../ownCloud/SS18/BA/Vortrag/Bilder/Rg2_c_plot_GPU.png")

# Querformat einzeln:
plt.subplots_adjust(left=0.07,right=0.98,top=0.98,bottom=0.09)
